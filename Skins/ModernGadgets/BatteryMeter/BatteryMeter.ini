[Rainmeter]
MiddleMouseUpAction=[!Refresh]
MouseOverAction=[!ToggleMeterGroup ConfigButton][!UpdateMeterGroup ConfigButton][!UpdateMeterGroup Background][!Redraw]
MouseLeaveAction=[!ToggleMeterGroup ConfigButton][!UpdateMeterGroup ConfigButton][!UpdateMeterGroup Background][!Redraw]
DynamicWindowSize=1
AccurateText=1
Group=ModernGadgets | MgGlobalRefresh | MgImportRefresh | MgBatteryMeter

; Custom Context Menu
ContextTitle=Battery Meter settings
ContextAction=[!ActivateConfig "ModernGadgets\BatteryMeter\Settings" "BatteryMeterSettings.ini"]
ContextTitle2=Global settings
ContextAction2=[!ActivateConfig "ModernGadgets\Settings\GlobalSettings" "GlobalSettings.ini"]
ContextTitle3=Gadget manager
ContextAction3=[!ActivateConfig "ModernGadgets\Settings\GadgetManager" "GadgetManager.ini"]

[Metadata]
Name=Battery Meter
Author=raiguard
Information=Tracks power draw and battery statistics over time.
License=Creative Commons Attribution-NonCommercial-ShareAlike 3.0
Version=1.5.0-beta.10

[Variables]
@includeStyleSheet=#@#StyleSheet.inc
@includeGlobalSettings=#@#Settings\GlobalSettings.inc
@includeGadgetSettings=#@#Settings\BatteryMeterSettings.inc

rowSpacing=0

test=0

contentMarginAbs=4
bgHeight=100

; #region
; BATTERY ICON
batteryWidth=15
batteryHeight=26
batteryOutlineWidth=(2 * #scale#)
batteryNubWidth=(#batteryWidth# / 2)
batteryNubHeight=3
; charge symbol
batteryChargeSymbolW=(#batteryWidth# - 4)
batteryChargeSymbolH=14
batteryChargeSymbolX=(((#batteryOutlineWidth# * 2) + #batteryWidth#) / 2 - (#batteryChargeSymbolW# / 2))
batteryChargeSymbolY=(((#batteryOutlineWidth# * 2) + #batteryHeight# + (#batteryNubHeight# * 2)) / 2 - (#batteryChargeSymbolH# / 2))

[StyleStringLabel]
FontColor=200,200,200

; ==================================================
; MEASURES
; ==================================================

[MeasureColorScript]
Measure=Script
ScriptFile=#scriptPath#Color.lua

[MeasurePluggedIn]
Measure=Plugin
Plugin=PowerPlugin
PowerState=ACLine

[MeasureChargeStatus]
Measure=Plugin
Plugin=PowerPlugin
PowerState=Status
Substitute="0":"NoBattery","1":"Charging","2":"Critical","3":"Low","4":"Full"
RegExpSubstitute=1

[MeasureBatteryLifetime]
Measure=Plugin
Plugin=PowerPlugin
PowerState=Lifetime
Format=#batteryLifetimeFormat#
Substitute="Unknown":"Plugged in, charging"

[MeasureBatteryLifetimePercent]
Measure=Plugin
Plugin=PowerPlugin
PowerState=Percent

; ----- ActiveNet Measures -----

[MeasureBatteryName]
Measure=Plugin
Plugin=ActiveNet
Type=BatDeviceName
Group=Battery
UpdateDivider=-1

[MeasureBatteryInstance]
Measure=Plugin
Plugin=ActiveNet
Type=BatInstanceName
Group=Battery
UpdateDivider=(#autoFailover# = 1) ? 10 : -1
DynamicVariables=#autoFailover#

[MeasureBatteryVoltage]
Measure=Plugin
Plugin=ActiveNet
Type=BatVoltage
Name=[MeasureBatteryInstance]
Group=Battery
DynamicVariables=#autoFailover#

[MeasureChargeRate]
Measure=Plugin
Plugin=ActiveNet
Type=BatChargeRate
Name=[MeasureBatteryInstance]
Group=Battery
DynamicVariables=#autoFailover#

[MeasureCurrentCharge]
Measure=Plugin
Plugin=ActiveNet
Type=BatRemainingCapacity
Name=[MeasureBatteryInstance]
Group=Battery
DynamicVariables=#autoFailover#

[MeasureMaxChargeCalc]
Measure=Calc
Formula=MeasureCurrentCharge * 100 / MeasureBatteryLifetimePercent
Group=Battery

; ==================================================
; METERS
; ==================================================

[MeterBackground]
Meter=Shape
MeterStyle=StyleBackground

[MeterSettingsButton_]
Meter=Image
MeterStyle=StyleConfigButton

[MeterBatteryIcon]
Meter=Shape
; Background
Shape=Path BatteryBorder | StrokeWidth 0 | StrokeLineJoin Round | Fill Color #colorSubBg# | Stroke Color #colorBorder#
; Battery shape + fill
Shape2=Path BatteryBorder | StrokeWidth 0 | StrokeLineJoin Round | Fill Color [#colorBattery[&MeasureChargeStatus]]
Shape3=Rectangle #batteryOutlineWidth#,(#batteryNubHeight# + (#batteryHeight# - (#batteryHeight# * ([MeasureBatteryLifetimePercent:/100])))),#batteryWidth#,(#batteryHeight# + #batteryNubHeight#)
Shape4=Combine Shape2 | Intersect Shape3
; Border
Shape5=Path BatteryBorder | StrokeWidth #batteryOutlineWidth# | Stroke Color 70,70,70 | StrokeLineJoin Round | Fill Color 0,0,0,0
BatteryBorder=#batteryOutlineWidth#,(#batteryOutlineWidth# + #batteryNubHeight#) | LineTo (#batteryOutlineWidth# + ((#batteryWidth# / 2) - (#batteryNubWidth# / 2))),(#batteryOutlineWidth# + #batteryNubHeight#) | LineTo (#batteryOutlineWidth# + ((#batteryWidth# / 2) - (#batteryNubWidth# / 2))),(#batteryOutlineWidth#) | LineTo (#batteryOutlineWidth# + ((#batteryWidth# / 2) + (#batteryNubWidth# / 2))),(#batteryOutlineWidth#) | LineTo (#batteryOutlineWidth# + ((#batteryWidth# / 2) + (#batteryNubWidth# / 2))),(#batteryOutlineWidth# + #batteryNubHeight#) | LineTo (#batteryWidth# + #batteryOutlineWidth#),(#batteryOutlineWidth# + #batteryNubHeight#) | LineTo (#batteryWidth# + #batteryOutlineWidth#),(#batteryHeight# + #batteryOutlineWidth# + #batteryNubHeight#) | LineTo #batteryOutlineWidth#,(#batteryHeight# + #batteryOutlineWidth# + #batteryNubHeight#) | ClosePath 1
; Charge Symbol
Shape6=Path ChargeSymbol | StrokeWidth (0.5 * #scale#) | Stroke Color #colorSubBg#,([MeasureChargeStatus:] = 1 ? 220 : 0) | Fill Color [#colorBattery[&MeasureChargeStatus]],([MeasureChargeStatus:] = 1 ? 255 : 0) | StrokeLineJoin Round
ChargeSymbol=(#batteryChargeSymbolX# + (#batteryChargeSymbolW# * (0/6))),(#batteryChargeSymbolY# + (#batteryChargeSymbolH# * (5/9))) | LineTo (#batteryChargeSymbolX# + (#batteryChargeSymbolW# * (2/6))),(#batteryChargeSymbolY# + (#batteryChargeSymbolH# * (5/9))) | LineTo (#batteryChargeSymbolX# + (#batteryChargeSymbolW# * (1/6))),(#batteryChargeSymbolY# + (#batteryChargeSymbolH# * (9/9))) | LineTo (#batteryChargeSymbolX# + (#batteryChargeSymbolW# * (6/6))),(#batteryChargeSymbolY# + (#batteryChargeSymbolH# * (4/9))) | LineTo (#batteryChargeSymbolX# + (#batteryChargeSymbolW# * (4/6))),(#batteryChargeSymbolY# + (#batteryChargeSymbolH# * (4/9))) | LineTo (#batteryChargeSymbolX# + (#batteryChargeSymbolW# * (5/6))),(#batteryChargeSymbolY# + (#batteryChargeSymbolH# * (0/9))) | ClosePath 1
X=(#contentMargin# + 2)
Y=(#contentMargin# + 3 - #scale#)
DynamicVariables=1
TransformationMatrix=#transformationMatrix#

[MeterGadgetTitle]
Meter=String
MeterStyle=StyleString | StyleStringGadgetHeader
X=5R
Text=Battery Meter
DynamicVariables=1

[MeterBatteryRemaining]
Meter=String
MeterStyle=StyleString
MeasureName=MeasureBatteryLifetime
FontColor=[#colorBattery[&MeasureChargeStatus]]
X=r
Y=-2R
DynamicVariables=1

[MeterBatteryPercentRemaining]
Meter=String
MeterStyle=StyleString
MeasureName=MeasureBatteryLifetimePercent
FontColor=#colorAccent#
Text=%1%
X=r
Y=R

[MeterBatteryVoltage]
Meter=String
MeterStyle=StyleString | StyleStringRightAlign
MeasureName=MeasureBatteryVoltage
FontColor=#colorAccent#
NumOfDecimals=3
Text=%1 V

[MeterBatteryChargeRateLabel]
Meter=String
MeterStyle=StyleString | StyleStringLabel
Text=Charge Rate:

[MeterBatteryChargeRate]
Meter=String
MeterStyle=StyleString | StyleStringRightAlign
MeasureName=MeasureChargeRate
NumOfDecimals=3
Text=%1 W

[MeterBatteryCurrentChargeLabel]
Meter=String
MeterStyle=StyleString | StyleStringLabel
Text=Current Charge:

[MeterBatteryCurrentCharge]
Meter=String
MeterStyle=StyleString | StyleStringRightAlign
MeasureName=MeasureCurrentCharge
NumOfDecimals=3
Text=%1 Wh

[MeterBatteryMaxChargeLabel]
Meter=String
MeterStyle=StyleString | StyleStringLabel
Text=Max Charge:

[MeterBatteryMaxCharge]
Meter=String
MeterStyle=StyleString | StyleStringRightAlign
MeasureName=MeasureMaxChargeCalc
NumOfDecimals=3
Text=%1 Wh

[MeterBackgroundHeight]
Meter=Image
MeterStyle=StyleBackgroundHeight
Y=(#contentMarginAbs# + #bgOffset#)R

; ----- Button Regions -----

[MeterSettingsButton]
Meter=Image
MeterStyle=StyleMouseRegion | StyleMouseRegionImgButtonHover
LeftMouseUpAction=[!SkinCustomMenu]