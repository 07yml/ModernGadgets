[Rainmeter]
MiddleMouseUpAction=[!Refresh]
OnRefreshAction=[!ZPos -2][!ClickThrough 1][!AutoSelectScreen 1][!Move "[#WORKAREAX@[#sb2Monitor]]" "[#WORKAREAY@[#sb2Monitor]]"]
OnCloseAction=[!CommandMeasure MeasureLoadSkinScript "ToggleSkin('[MeasureSb1BgConfig]', nil, 0)"]
AccurateText=1
DynamicWindowSize=1
Group=ModernGadgets | MgImportRefresh | MgSb2

[Variables]
@includeStyleSheet=#@#StyleSheet.inc
@includeGlobalSettings=#@#Settings\GlobalSettings.inc

state=1

; ==================================================
;  MEASURES
; ==================================================

[MeasurePixelColor]
Measure=Plugin
Plugin=PixelColor

[MeasureConfigActive]
Measure=Plugin
Plugin=ConfigActive

[MeasureLoadSkinScript]
Measure=Script
ScriptFile=#scriptPath#LoadSkin.lua

[MeasureVerifyScript]
Measure=Script
ScriptFile=#scriptPath#Verify.lua

[MeasureSb2BgConfig]
Measure=String
String=ModernGadgets\Settings\Sidebars\Backgrounds\2
Substitute="\":"\\"

[MeasureWorkAreaWidth]
Measure=Calc
Formula=(#WORKAREAX# + #WORKAREAWIDTH# - 1)
DynamicVariables=1

[MeasureWorkAreaHeight]
Measure=Calc
Formula=(#WORKAREAY# + #WORKAREAHEIGHT# - 1)
DynamicVariables=1

[MeasureDirectionControl]
Measure=String
String=#sb2Alignment#
IfMatch=right
IfMatchAction=[!EnableMeasure MeasureControlRight]
IfNotMatchAction=[!EnableMeasure MeasureControlLeft]

[MeasureControlRight]
Measure=Calc
Formula=([&MeasureVerifyScript:CheckColor('[&MeasurePixelColor:PixelRGB([&MeasureWorkAreaWidth:],[#WORKAREAY])]')] <> #state#) + ([&MeasureVerifyScript:CheckColor('[&MeasurePixelColor:PixelRGB([&MeasureWorkAreaWidth:],[&MeasureWorkAreaHeight:])]')] <> #state#)
DynamicVariables=1
IfCondition=MeasureControlRight = 2
IfTrueAction=[!SetVariable state "(abs(#state#-1))"][!EnableMeasure MeasureToggleBackground][!UpdateMeasure MeasureToggleBackground][!UpdateMeasure MeasureControlRight]
Disabled=1

[MeasureControlLeft]
Measure=Calc
Formula=([&MeasureVerifyScript:CheckColor('[&MeasurePixelColor:PixelRGB([#WORKAREAX],[#WORKAREAY])]')] <> #state#) + ([&MeasureVerifyScript:CheckColor('[&MeasurePixelColor:PixelRGB([#WORKAREAX],[&MeasureWorkAreaHeight:])]')] <> #state#)
DynamicVariables=1
IfCondition=MeasureControlLeft = 2
IfTrueAction=[!SetVariable state "(abs(#state#-1))"][!EnableMeasure MeasureToggleBackground][!UpdateMeasure MeasureToggleBackground][!UpdateMeasure MeasureControlLeft]
Disabled=1

[MeasureToggleBackground]
Measure=Calc
IfCondition=#state# = 1
IfTrueAction=[!CommandMeasure MeasureLoadSkinScript "ToggleSkin('[MeasureSb2BgConfig]', nil, 1)"][!DisableMeasure MeasureToggleBackground]
IfFalseAction=[!CommandMeasure MeasureLoadSkinScript "ToggleSkin('[MeasureSb2BgConfig]', nil, 0)"][!DisableMeasure MeasureToggleBackground]
DynamicVariables=1
Disabled=1

; ==================================================
;  METERS
; ==================================================

[MeterTopLeft]
Meter=Image
SolidColor=#colorSbControlCorner#
X=0
Y=0
W=1
H=1

[MeterTopRight]
Meter=Image
SolidColor=#colorSbControlCorner#
X=(#WORKAREAWIDTH# - 1)
Y=0
W=1
H=1
DynamicVariables=1

[MeterBottomLeft]
Meter=Image
SolidColor=#colorSbControlCorner#
X=0
Y=(#WORKAREAHEIGHT# - 1)
W=1
H=1
DynamicVariables=1

[MeterBottomRight]
Meter=Image
SolidColor=#colorSbControlCorner#
X=(#WORKAREAWIDTH# - 1)
Y=(#WORKAREAHEIGHT# - 1)
W=1
H=1
DynamicVariables=1

; [MeterDebugDragger]
; Meter=Image
; SolidColor=0,100,0
; X=10
; Y=10
; W=30
; H=30
; LeftMouseUpAction=[!WriteKeyValue Rainmeter DesktopWorkArea@2 "0,0,(#sb2Columns# * (#bgWidth# + (#bgOffset# * 2))),0" "#SETTINGSPATH#Rainmeter.ini"][!RefreshApp]